# The Final, Corrected GitHub Actions Workflow
# File path: .github/workflows/c-cpp.yml

name: Build Android Example

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  android-example:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      NDK_VERSION: 21.4.7075529
      API_LEVEL: 30
      BUILD_TOOLS: 30.0.3

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Recreate WORKSPACE file with all fixes
        run: |
          echo "Recreating WORKSPACE file with all fixes..."
          echo '# Copyright 2021 Google LLC' > WORKSPACE
          echo '#' >> WORKSPACE
          echo '# Licensed under the Apache License, Version 2.0 (the "License");' >> WORKSPACE
          echo '# you may not use this file except in compliance with the License.' >> WORKSPACE
          echo '# You may obtain a copy of the License at' >> WORKSPACE
          echo '#' >> WORKSPACE
          echo '#      http://www.apache.org/licenses/LICENSE-2.0' >> WORKSPACE
          echo '#' >> WORKSPACE
          echo '# Unless required by applicable law or agreed to in writing, software' >> WORKSPACE
          echo '# distributed under the License is distributed on an "AS IS" BASIS,' >> WORKSPACE
          echo '# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.' >> WORKSPACE
          echo '# See the License for the specific language governing permissions and' >> WORKSPACE
          echo '# limitations under the License.' >> WORKSPACE
          echo '' >> WORKSPACE
          echo 'workspace(name = "lyra")' >> WORKSPACE
          echo '' >> WORKSPACE
          echo 'load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")' >> WORKSPACE
          echo 'load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# TensorFlow.' >> WORKSPACE
          echo 'http_archive(' >> WORKSPACE
          echo '    name = "org_tensorflow",' >> WORKSPACE
          echo '    sha256 = "233875ea27fc357f6b714b2a0de5f6ff124b50c1ee9b3b41f9e726e9e677b86c",' >> WORKSPACE
          echo '    strip_prefix = "tensorflow-2.5.0",' >> WORKSPACE
          echo '    urls = ["https://github.com/tensorflow/tensorflow/archive/v2.5.0.tar.gz"],' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo 'load("@org_tensorflow//tensorflow:workspace3.bzl", "tf_workspace3")' >> WORKSPACE
          echo '' >> WORKSPACE
          echo 'tf_workspace3()' >> WORKSPACE
          echo '' >> WORKSPACE
          echo 'git_repository(' >> WORKSPACE
          echo '    name = "com_google_protobuf",' >> WORKSPACE
          echo '    commit = "fd8aabf32d1d1ae3319e280fed07aa6eb24d150d",' >> WORKSPACE
          echo '    remote = "https://github.com/protocolbuffers/protobuf",' >> WORKSPACE
          echo '    shallow_since = "1614800268 -0800",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# Abseil' >> WORKSPACE
          echo 'git_repository(' >> WORKSPACE
          echo '    name = "com_google_absl",' >> WORKSPACE
          echo '    commit = "215105818dfde3174fe799600bb0f3cae233d0bf",' >> WORKSPACE
          echo '    remote = "https://github.com/abseil/abseil-cpp",' >> WORKSPACE
          echo '    shallow_since = "1635953174 -0400",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# Googletest' >> WORKSPACE
          echo 'git_repository(' >> WORKSPACE
          echo '    name = "com_google_googletest",' >> WORKSPACE
          echo '    commit = "703bd9caab50b139428c2ea8af6c8a74a1203425",' >> WORKSPACE
          echo '    remote = "https://github.com/google/googletest",' >> WORKSPACE
          echo '    shallow_since = "1610134441 -0800",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# Filesystem' >> WORKSPACE
          echo 'new_git_repository(' >> WORKSPACE
          echo '    name = "gulrak_filesystem",' >> WORKSPACE
          echo '    build_file_content = """' >> WORKSPACE
          echo 'package(default_visibility = ["//visibility:public"])' >> WORKSPACE
          echo 'cc_library(' >> WORKSPACE
          echo '    name = "filesystem",' >> WORKSPACE
          echo '    hdrs = glob(["include/ghc/**/*.hpp"]),' >> WORKSPACE
          echo '    includes = ["include"],' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '""",' >> WORKSPACE
          echo '    commit = "7e37433f318488ae4bc80f80e12df12a01579874",' >> WORKSPACE
          echo '    remote = "https://github.com/gulrak/filesystem",' >> WORKSPACE
          echo '    shallow_since = "1602313866 +0200",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# audio_dsp' >> WORKSPACE
          echo 'git_repository(' >> WORKSPACE
          echo '    name = "com_google_audio_dsp",' >> WORKSPACE
          echo '    commit = "d3b3310e30327f3d3d63c5a77884869501511218",' >> WORKSPACE
          echo '    remote = "https://github.com/google/audio_dsp.git",' >> WORKSPACE
          echo '    shallow_since = "1662684571 -0700",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# Correct gflags definition' >> WORKSPACE
          echo 'git_repository(' >> WORKSPACE
          echo '    name = "gflags",' >> WORKSPACE
          echo '    remote = "https://github.com/gflags/gflags.git",' >> WORKSPACE
          echo '    tag = "v2.2.2",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# Correct glog definition' >> WORKSPACE
          echo 'git_repository(' >> WORKSPACE
          echo '    name = "com_google_glog",' >> WORKSPACE
          echo '    remote = "https://github.com/google/glog.git",' >> WORKSPACE
          echo '    commit = "v0.6.0",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# Bazel Android build rules' >> WORKSPACE
          echo 'http_archive(' >> WORKSPACE
          echo '    name = "rules_android",' >> WORKSPACE
          echo '    sha256 = "cd06d15dd8bb59926e4d65f9003bfc20f9da4b2519985c27e190cddc8b7a7806",' >> WORKSPACE
          echo '    strip_prefix = "rules_android-0.1.1",' >> WORKSPACE
          echo '    urls = [' >> WORKSPACE
          echo '        "https://mirror.bazel.build/github.com/bazelbuild/rules_android/archive/v0.1.1.zip",' >> WORKSPACE
          echo '        "https://github.com/bazelbuild/rules_android/archive/v0.1.1.zip",' >> WORKSPACE
          echo '    ],' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo '# Register the Android SDK and NDK with Bazel' >> WORKSPACE
          # =======================  The final fix is here =======================
          echo 'load("@rules_android//android:android.bzl", "android_sdk_repository", "android_ndk_repository")' >> WORKSPACE
          # =====================================================================
          echo '' >> WORKSPACE
          echo 'android_sdk_repository(' >> WORKSPACE
          echo '    name = "androidsdk",' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo '' >> WORKSPACE
          echo 'android_ndk_repository(' >> WORKSPACE
          echo '    name = "androidndk",' >> WORKSPACE
          echo '    api_level = 30,' >> WORKSPACE
          echo ')' >> WORKSPACE
          echo "WORKSPACE file has been recreated successfully."

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python deps for TF configure
        run: |
          python -m pip install --upgrade pip
          python -m pip install "numpy==1.26.4" six

      - name: Set up Java 17 for Android cmdline-tools
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android cmdline-tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses

      - name: Install Android SDK/NDK components
        run: |
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platforms;android-${API_LEVEL}" \
            "build-tools;${BUILD_TOOLS}" \
            "platform-tools" \
            "ndk;${NDK_VERSION}"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/${NDK_VERSION}" >> $GITHUB_ENV

      - name: Switch to Java 11 for Bazel
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Install Bazelisk
        run: |
          curl -L https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64 -o bazelisk
          chmod +x bazelisk
          sudo mv bazelisk /usr/local/bin/bazel
          bazel --version

      - name: Build Android App (fat APK)
        run: |
          PY_BIN="$(which python)"
          echo "Using PYTHON_BIN_PATH=$PY_BIN"
          TF_NEED_CUDA=0 bazel build -c opt \
            //lyra/android_example:lyra_android_example \
            --fat_apk_cpu=armeabi-v7a,arm64-v8a \
            --copt=-DBENCHMARK \
            --repo_env=PYTHON_BIN_PATH="$PY_BIN"

      - name: Collect artifact
        run: |
          mkdir -p action-product
          cp bazel-bin/lyra/android_example/lyra_android_example.apk action-product/lyra_example-fat.apk
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lyra-android-example-fat
          path: action-product/
