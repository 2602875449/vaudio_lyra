# 最终的、最可靠的 GitHub Actions workflow 配置文件
# 文件路径: .github/workflows/c-cpp.yml

name: Build Android Example

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  android-example:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      NDK_VERSION: 21.4.7075529
      API_LEVEL: 30
      BUILD_TOOLS: 30.0.3

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # ====================================================================
      # 最终方案：直接用一个已修正的、完整的 WORKSPACE 文件覆盖旧文件
      # 这可以从根本上避免所有 sed 和 YAML 语法问题
      # ====================================================================
      - name: Overwrite WORKSPACE with a corrected version
        run: |
          echo "Overwriting WORKSPACE file to fix all dependency issues..."
          cat > WORKSPACE << 'EOF'
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

workspace(name = "lyra")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")

# TensorFlow.
http_archive(
    name = "org_tensorflow",
    sha256 = "c241ea9b392398904bceac5c1844f9175b5a8377759c256747d6d7e97d165df9",
    strip_prefix = "tensorflow-2.5.0",
    urls = ["https://github.com/tensorflow/tensorflow/archive/v2.5.0.tar.gz"],
)

load("@org_tensorflow//tensorflow:workspace3.bzl", "tf_workspace")

tf_workspace(tf_repo_name = "org_tensorflow")

git_repository(
    name = "com_google_protobuf",
    commit = "fd8aabf32d1d1ae3319e280fed07aa6eb24d150d",
    remote = "https://github.com/protocolbuffers/protobuf",
    shallow_since = "1614800268 -0800",
)

# Abseil
git_repository(
    name = "com_google_absl",
    commit = "215105818dfde3174fe799600bb0f3cae233d0bf",
    remote = "https://github.com/abseil/abseil-cpp",
    shallow_since = "1635953174 -0400",
)

# Googletest
git_repository(
    name = "com_google_googletest",
    commit = "703bd9caab50b139428c2ea8af6c8a74a1203425",
    remote = "https://github.com/google/googletest",
    shallow_since = "1610134441 -0800",
)

# Filesystem
new_git_repository(
    name = "gulrak_filesystem",
    build_file_content = """
package(default_visibility = ["//visibility:public"])
cc_library(
    name = "filesystem",
    hdrs = glob(["include/ghc/**/*.hpp"]),
    includes = ["include"],
)
""",
    commit = "7e37433f318488ae4bc80f80e12df12a01579874",
    remote = "https://github.com/gulrak/filesystem",
    shallow_since = "1602313866 +0200",
)

# audio_dsp
git_repository(
    name = "com_google_audio_dsp",
    commit = "d3b3310e30327f3d3d63c5a77884869501511218",
    remote = "https://github.com/google/audio_dsp.git",
    shallow_since = "1662684571 -0700",
)

# Correct gflags definition
git_repository(
    name = "gflags",
    remote = "https://github.com/gflags/gflags.git",
    tag = "v2.2.2",
)

# Correct glog definition
git_repository(
    name = "com_google_glog",
    remote = "https://github.com/google/glog.git",
    commit = "v0.6.0",
)
EOF
          echo "WORKSPACE file has been overwritten successfully."

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python deps for TF configure
        run: |
          python -m pip install --upgrade pip
          python -m pip install "numpy==1.26.4" six

      - name: Set up Java 17 for Android cmdline-tools
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android cmdline-tools
        run: |
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses

      - name: Install Android SDK/NDK components
        run: |
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platforms;android-${API_LEVEL}" \
            "build-tools;${BUILD_TOOLS}" \
            "platform-tools" \
            "ndk;${NDK_VERSION}"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/${NDK_VERSION}" >> $GITHUB_ENV

      - name: Switch to Java 11 for Bazel
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Install Bazelisk
        run: |
          curl -L https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64 -o bazelisk
          chmod +x bazelisk
          sudo mv bazelisk /usr/local/bin/bazel
          bazel --version

      - name: Build Android App (fat APK)
        run: |
          PY_BIN="$(which python)"
          echo "Using PYTHON_BIN_PATH=$PY_BIN"
          # Added --incompatible_legacy_local_fallback=false to solve potential TensorFlow configure issues
          TF_NEED_CUDA=0 bazel build -c opt \
            --config=android_arm64 \
            //lyra/android_example:lyra_android_example

      - name: Collect artifact
        run: |
          mkdir -p action-product
          cp bazel-bin/lyra/android_example/lyra_android_example.apk action-product/lyra_example-fat.apk
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lyra-android-example-fat
          path: action-product/
