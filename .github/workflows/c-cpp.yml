# 最终的、正确的 GitHub Actions Workflow
# File path: .github/workflows/c-cpp.yml

name: Build Android Example

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  android-example:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      NDK_VERSION: 21.4.7075529
      API_LEVEL: 30
      BUILD_TOOLS: 30.0.3

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      # ======================= 1. 指定正确的 Bazel 版本 =======================
      - name: Create .bazelversion file
        run: echo "5.3.2" > .bazelversion

      # ======================= 2. 生成一个现代化的、兼容的 WORKSPACE 文件 =======================
      - name: Recreate WORKSPACE file for Bazel 5.x
        run: |
          echo "Recreating WORKSPACE file for Bazel 5.x with modern rules_android..."
          cat > WORKSPACE << 'EOF'
# WORKSPACE for Bazel 5.x and modern Android rules
workspace(name = "lyra")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository", "new_git_repository")

# TensorFlow
http_archive(
    name = "org_tensorflow",
    sha256 = "233875ea27fc357f6b714b2a0de5f6ff124b50c1ee9b3b41f9e726e9e677b86c",
    strip_prefix = "tensorflow-2.5.0",
    urls = ["https://github.com/tensorflow/tensorflow/archive/v2.5.0.tar.gz"],
)

load("@org_tensorflow//tensorflow:workspace3.bzl", "tf_workspace3")
tf_workspace3()

# Other C++ dependencies
git_repository(name = "com_google_protobuf", commit = "fd8aabf32d1d1ae3319e280fed07aa6eb24d150d", remote = "https://github.com/protocolbuffers/protobuf", shallow_since = "1614800268 -0800")
git_repository(name = "com_google_absl", commit = "215105818dfde3174fe799600bb0f3cae233d0bf", remote = "https://github.com/abseil/abseil-cpp", shallow_since = "1635953174 -0400")
git_repository(name = "com_google_googletest", commit = "703bd9caab50b139428c2ea8af6c8a74a1203425", remote = "https://github.com/google/googletest", shallow_since = "1610134441 -0800")
new_git_repository(name = "gulrak_filesystem", build_file_content = """package(default_visibility = ["//visibility:public"])\ncc_library(name = "filesystem", hdrs = glob(["include/ghc/**/*.hpp"]), includes = ["include"])""", commit = "7e37433f318488ae4bc80f80e12df12a01579874", remote = "https://github.com/gulrak/filesystem", shallow_since = "1602313866 +0200")
git_repository(name = "com_google_audio_dsp", commit = "d3b3310e30327f3d3d63c5a77884869501511218", remote = "https://github.com/google/audio_dsp.git", shallow_since = "1662684571 -0700")
git_repository(name = "gflags", remote = "https://github.com/gflags/gflags.git", tag = "v2.2.2")
git_repository(name = "com_google_glog", remote = "https://github.com/google/glog.git", commit = "v0.6.0")

# Modern Android Rules Setup (compatible with Bazel 5.x)
http_archive(
    name = "rules_android",
    sha256 = "7a7f64420bbf12ac5274d754751525049b28f7adf05452f10255269ac22a0c4f",
    strip_prefix = "rules_android-0.4.0",
    urls = ["https://github.com/bazelbuild/rules_android/releases/download/v0.4.0/rules_android.v0.4.0.tar.gz"],
)

load("@rules_android//android:rules.bzl", "android_rules_dependencies")
android_rules_dependencies()

load("@rules_android//android:android_sdk_repository.bzl", "android_sdk_repository")
android_sdk_repository(
    name = "androidsdk",
    api_level = 30,
    build_tools_version = "30.0.3",
)
EOF

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Python deps for TF configure
        run: |
          python -m pip install --upgrade pip
          python -m pip install "numpy==1.26.4" six

      - name: Set up Java 17 for Android cmdline-tools
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install Android SDK/NDK components
        run: |
          mkdir -p "$ANDROID_SDK_ROOT"
          # Using a known-good version of command-line tools
          curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -o cmdtools.zip
          unzip -q cmdtools.zip -d "$ANDROID_SDK_ROOT"
          mv "$ANDROID_SDK_ROOT/cmdline-tools" "$ANDROID_SDK_ROOT/latest"
          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          mv "$ANDROID_SDK_ROOT/latest" "$ANDROID_SDK_ROOT/cmdline-tools/latest"
          
          yes | "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" --licenses
          "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" \
            "platforms;android-${API_LEVEL}" \
            "build-tools;${BUILD_TOOLS}" \
            "platform-tools" \
            "ndk;${NDK_VERSION}"
          echo "ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/${NDK_VERSION}" >> $GITHUB_ENV

      - name: Switch to Java 11 for Bazel
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '11'

      - name: Install Bazelisk
        run: |
          curl -L https://github.com/bazelbuild/bazelisk/releases/latest/download/bazelisk-linux-amd64 -o bazelisk
          chmod +x bazelisk
          sudo mv bazelisk /usr/local/bin/bazel
          bazel --version

      - name: Build Android App (fat APK)
        run: |
          PY_BIN="$(which python)"
          echo "Using PYTHON_BIN_PATH=$PY_BIN"
          TF_NEED_CUDA=0 bazel build -c opt \
            //lyra/android_example:lyra_android_example \
            --fat_apk_cpu=armeabi-v7a,arm64-v8a \
            --copt=-DBENCHMARK \
            --repo_env=PYTHON_BIN_PATH="$PY_BIN"

      - name: Collect artifact
        run: |
          mkdir -p action-product
          cp bazel-bin/lyra/android_example/lyra_android_example.apk action-product/lyra_example-fat.apk
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: lyra-android-example-fat
          path: action-product/
